#!/usr/bin/env bash

SEPARATOR=" "
NC=$(tput sgr0)
REV=$(tput rev)

_FILENAME=$1
shift
_FUNKNAME=$1
shift

[ -r "${_FILENAME}" ] && . "${_FILENAME}"


#                                                                                                  #
get_color_from_list()
{
    local _ROOT_DIR=$(cd $(dirname $0); echo $PWD)
    local KLR_FILE=${_ROOT_DIR}/selectdat_colors
    local MIN=1
    local MAX=$(< ${KLR_FILE} wc -l)
    local NUM=$(( RANDOM % $MAX + $MIN))
    local LINE=$(sed "${NUM}q;d" ${KLR_FILE}) ## TODO: read loaded file
    # >&2 echo N${NUM} ${LINE}
    local COLORFG="\e[38;5;$(echo ${LINE} | cut -f 1 -d ' ')m"
    local COLORBG="\e[48;5;$(echo ${LINE} | cut -f 2 -d ' ')m"
    echo "${COLORFG}${COLORBG}"
}

#                                                                                                  #
_-_getrndcolor()
{
    local MIN=0
    local MAX=255
    local COLORFG="\e[38;5;$(( RANDOM % $MAX + $MIN))m"  ## TODO: speedup dat random
    local COLORBG="\e[48;5;$(( RANDOM % $MAX + $MIN))m"  ## TODO: speedup dat random
    echo "${COLORFG}${COLORBG}"
}

#                                                                                                  #
if [ -z ${_FUNKNAME} ]; then
    _FUNKNAME="get_color_from_list"
    # _FUNKNAME="_-_getrndcolor"
fi

if [ ! "$(type -t ${_FUNKNAME})" = "function" ]; then
    exit 1
fi


MAX_ELEMENT_LENGTH=0
MAX_ELEMENTS_COUNT=0
for ELEMENT in $@
do
    if [ "${MAX_ELEMENT_LENGTH}" -lt "${#ELEMENT}" ]; then
        MAX_ELEMENT_LENGTH=${#ELEMENT}
    fi
    ((MAX_ELEMENTS_COUNT++))
done

## 1 coz space ' ' in end of element
LINE_PREFIX_LENGTH=$((1 + ${#SEPARATOR} + ${#MAX_ELEMENTS_COUNT}))
LINELENGTH=$(($MAX_ELEMENT_LENGTH + $LINE_PREFIX_LENGTH))

if [ -z ${SD_COLUMNS} ]; then
    COLUMNS=$(($(tput cols) / $LINELENGTH))
else
    COLUMNS=${SD_COLUMNS}
fi
CURRENT_COLUMN=0

for ELEMENT in $@
do
    ((SEQUENCE_NUM++))
    ARAY[$SEQUENCE_NUM]="$ELEMENT"
    MSGSPACER=$(printf "%-$(($MAX_ELEMENT_LENGTH - ${#ELEMENT}))s" "")

    ITR_CLR=$(${_FUNKNAME} ${ELEMENT})

    OUT_LIST_STR=$OUT_LIST_STR"${ITR_CLR}$(printf "%0${#MAX_ELEMENTS_COUNT}d" $SEQUENCE_NUM)$NC"
    OUT_LIST_STR=$OUT_LIST_STR"$SEPARATOR"
    OUT_LIST_STR=$OUT_LIST_STR"${ITR_CLR}"
    OUT_LIST_STR=$OUT_LIST_STR"${ELEMENT}"
    OUT_LIST_STR=$OUT_LIST_STR"${NC}"
    OUT_LIST_STR=$OUT_LIST_STR"${MSGSPACER}"
    OUT_LIST_STR=$OUT_LIST_STR" "

    NEW_COLUMN=$((SEQUENCE_NUM / $COLUMNS))
    if [ ! "${CURRENT_COLUMN}" == "${NEW_COLUMN}" ]; then
        OUT_LIST_STR=$OUT_LIST_STR"\n"
        CURRENT_COLUMN=$NEW_COLUMN
    fi
done

echo -e "$OUT_LIST_STR" >&2
read -p "$PS3" kek_var
echo -n "${ARAY[$kek_var]}"

