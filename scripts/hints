#!/bin/bash

#[==========================================================================]#
#[============================Super=Duper=HintFile=Veawer===================]#
#[============================Mister=ZaiZuPro===============================]#
#[============================2016==========================================]#
#[==========================================================================]#



NC=$(tput sgr0)
REV=$(tput rev)

#================CUSTOM_COORS======================
# add some color
if [ -f $HOME/.bash_colors ]; then
    source $HOME/.bash_colors
fi

#================CUSTOM_FUNCTIONS===================
# Source bash functions, if present
if [ -f ~/.bash_functions ]; then
    source ~/.bash_functions
fi


#[==========================================================================]#
function __hideCursor
{
    tput civis
}
function __showCursor
{
    tput cnorm
}


#[==========================================================================]#
function __init
{
    if [ -z ${HINTS_DIR} ]; then
        HINTS_DIR="${HOME}/_hints"
        echo
        echo "plz setup HINTS_DIR variable."
        echo "HINTS_DIR points to ${HINTS_DIR}"
        __blockprintor "HINTS_DIR points to ${HINTS_DIR}" $YELLOWFGBG
        __hideCursor
        read -n1 -r -p "${REV}Press any key to continue...${NC}" key
        __showCursor
    fi
}

#[==========================================================================]#
function __showHelp
{
    printf "s - show content.\n"
}

#[==========================================================================]#
function __getContentList
{
    local __HINTS_DIR=$1
    local CONTENTLIST=($(ls -A ${__HINTS_DIR}))
    echo ${CONTENTLIST[*]}
}

#[==========================================================================]#
function __showContentList
{
    local CONTENTLIST=(${@})

    ## TODO fix magic number 20 for_very_long_file_names.
    printf "┃ %3s ┃ %-20s ┃\n" "num" "file name"
    printf "┣━━━━━╋━━━━━━━━━━━━━━━━━━━━━━┫\n"
    for index in ${!CONTENTLIST[*]};do
            # printf "┣━━━━━╋━━━━━━━━━━━━━━━━━━━━━━┫\n"
            printf "┃ %-3d ┃ %-20s ┃\n" $index ${CONTENTLIST[$index]}
            # echo "   | $index |  ${CONTENTLIST[$index]}"
    done
    printf "┗━━━━━┻━━━━━━━━━━━━━━━━━━━━━━┛\n"
}

#[==========================================================================]#
function __ioHandler
{
    local input=
    local size=$1
    local output=
    while [ true ] ; do
        clear
        read -p "Enter hint's number (h - help):" input
        case "${input}" in
            [qQ]| [eE][xX][iI][tT]   ) tput rmcup;exit;;
            [sS]   ) output='s';break;;
            [hH] | [hH][eE][lL][pP]  )
                __showHelp
                __hideCursor
                read -n1 -r -p "${REV}Press any key to continue...${NC}" key
                __showCursor;;

            [0-9] ) output=${input};break;;


        # case numbers
        #     if (( ${input} > (${size} - 1) )); then
        #         ##read again
        #         __ioHandler
        #     fi
        #     #output=${input};break;;

        esac
    done

    echo ${output}
}

#[==========================================================================]#
function __iteration
{
    ##tput smcup
    local __HINTS_DIR=$1
    local CURRENTHINTSLIST=($(__getContentList ${__HINTS_DIR}))

    __showContentList "${CURRENTHINTSLIST[@]}"
    #__showContentList $(__getContentList ${HINTS_DIR})

    #todo: replace with __ioHandler
    read -p "enter hint's number:" HINT_NUMBER
    ##tput rmcup
    clear

    local HINT_NAME=
    if [ ${HINT_NUMBER} = "-" ]; then
        # __iteration ${HINT_NAME}
        HINT_NAME=${__HINTS_DIR}"/.."
    else
        HINT_NAME=${__HINTS_DIR}/${CURRENTHINTSLIST[${HINT_NUMBER}]}
    fi

    ## go in subdir
    if [ -d ${HINT_NAME} ]; then
        __iteration ${HINT_NAME}
    fi

    ## show file content
    if [ -f ${HINT_NAME} ]; then
        less ${HINT_NAME}
        #todo: go to next io __iteration
        # exit 0
    fi
}


## main loop
#[==========================================================================]#
## save current state of screen
trap "tput rmcup;exit" SIGINT SIGKILL SIGTERM SIGHUP
tput smcup
clear

__init


CURRENTHINTSLIST=($(__getContentList ${HINTS_DIR}))
# __iteration ${HINTS_DIR}

ttt=$(__ioHandler ${#CURRENTHINTSLIST[@]})

tput rmcup

