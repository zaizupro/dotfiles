#!/bin/bash


if [ -z ${HINTS_DIR} ]; then
    HINTS_DIR="${HOME}/_hints"
fi


#[==========================================================================]#
function getContentList
{
    local __HINTS_DIR=$1
    local ContentListRV=($(ls -A ${__HINTS_DIR}))
    echo ${ContentListRV[*]}
}

#[==========================================================================]#
function showContentList
{
    local ContentList=(${@})

    ## TODO fix magic number 20 for_very_long_file_names.
    printf "┃ %3s ┃ %-20s ┃\n" "num" "file name"
    printf "┣━━━━━╋━━━━━━━━━━━━━━━━━━━━━━┫\n"
    for index in ${!ContentList[*]};do
            # printf "┣━━━━━╋━━━━━━━━━━━━━━━━━━━━━━┫\n"
            printf "┃ %-3d ┃ %-20s ┃\n" $index ${ContentList[$index]}
            # echo "   | $index |  ${ContentList[$index]}"
    done
    printf "┗━━━━━┻━━━━━━━━━━━━━━━━━━━━━━┛\n"
}

#[==========================================================================]#
function iteration
{
    tput smcup
    local __HINTS_DIR=$1
    currentHintsList=($(getContentList ${__HINTS_DIR}))

    showContentList "${currentHintsList[@]}"
    #showContentList $(getContentList ${HINTS_DIR})

    read -p "enter hint's number:" HINT_NUMBER
    tput rmcup
    if (( ${HINT_NUMBER} > (${#currentHintsList[*]} - 1) )); then
        ##read again
    fi

    local HINT_NAME=${__HINTS_DIR}/${currentHintsList[${HINT_NUMBER}]}

    ## go in subdir
    if [ -d ${HINT_NAME} ]; then
        #echo "its dir"   ##debug
        iteration ${HINT_NAME}
    fi

    ## show file content
    if [ -f ${HINT_NAME} ]; then
        #echo "its file"   ##debug
        less ${HINT_NAME}
        # exit 0
    fi
}


## main loop
clear
iteration ${HINTS_DIR}

