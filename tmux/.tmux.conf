##============================================================================##
##=================[prefix key]
unbind C-b      ## Send the prefix key (C-b) through to the application.
set -g prefix C-a
bind C-a send-prefix
# for nested tmux sessions
bind-key a send-prefix

##============================================================================##
##=================[Start Window Numbering at 1]
set -g pane-base-index 1
set -g base-index 1


##============================================================================##
##=================[autorenaming]
set -g allow-rename off
# Automatically set window title
setw -g automatic-rename off


##============================================================================##
##=================[256colors]
## need to repair logic expression
## set the default TERM
# set -g default-terminal screen

## update the TERM variable of terminal emulator when creating a new session or attaching a existing session
set -g update-environment 'DISPLAY SSH_ASKPASS SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY TERM'
## determine if we should enable 256-colour support
# if "[[ ${TERM} =~ 256color || ${TERM} == fbterm ]]" 'set -g default-terminal screen-256color'

# set -g default-terminal screen-256color
#set -g default-terminal xterm-256color
set -g default-terminal rxvt-256color
#set -g default-terminal tmux-256color


##============================================================================##
##=================[mouse support]
##=================[before 2.1]
# set -g mouse-select-pane on
# set -g mouse-select-window on
# set -g mode-mouse off

# bind m run "if [[ `tmux show-option -w | grep mode-mouse.*on` ]]; then toggle=off; else toggle=on; fi; tmux display-message \"mouse tmux: \$toggle\"; tmux set -w mode-mouse \$toggle &> /dev/null; for cmd in mouse-select-pane mouse-resize-pane mouse-select-window; do tmux set -g \$cmd \$toggle &> /dev/null; done;"

##=================[after 2.1]
set -g mouse off


##============================================================================##
##                 =======[ stop lagging <ESC> key ]======                    ##
set -sg escape-time 0


##============================================================================##
##=================[ Clock ]
setw -g clock-mode-colour colour208
setw -g clock-mode-style 24


##============================================================================##
##=================[ status bar colors ]
# set -g status on
# set -g status-fg black
# set -g status-bg yellow
# set -g status-attr default


##============================================================================##
##=================[ other ]
set -g renumber-windows on  # automatically renumber tmux windows
# set-window-option -g monitor-activity off
# set-window-option -g utf8 on
# set -g status-utf8 on
# set -g set-titles on
# set -g set-titles-string '#{pane_current_command}'

# pass through xterm keys
set -g xterm-keys on

set -g history-limit 7000


##============================================================================##
##=================[ KEYS ]
# bind -n  --- global keys
# bind -r  --- can be repeated
# for command mode with -c
# bind-key  -- keys after prefix

bind r source-file ~/.tmux.conf \; display "Config Reloaded!"

bind y setw synchronize-panes

##========================================##
##=================[ utility KEYS ]
bind C-i run-shell "ifconfig"


##========================================##
##=================[ Copy KEYS ]

bind Enter copy-mode # enter copy mode
bind-key    -T copy-mode Space send-keys -X begin-selection \; display "selection begined!"
bind-key    -T copy-mode Enter send-keys -X copy-selection-and-cancel \; run -b "tmux save-buffer - | xsel -i -b; xsel -o -b | xsel -i -p" \; display "selection copied!"

# copy to X11 clipboard
if -b 'command -v xsel > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xsel -i -b; xsel -o -b | xsel -i -p"'
if -b '! command -v xsel > /dev/null 2>&1 && command -v xclip > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xclip -i -selection clipboard >/dev/null 2>&1"'


# Copy into primary
unbind C-y
bind C-y choose-buffer "run \"tmux save-buffer -b '%%' - | xsel -i -b; xsel -o -b | xsel -i -p \""

# bind-key C-c  send-keys C-a c

# copy last tmux selection to X default buffer
# bind  C-c run-shell "tmux save-buffer -  | xsel -i -b >> /dev/null "\; \
#     run-shell "tmux save-buffer -  | xclip -i -selection clipboard >> /dev/null "\; \

unbind n                ## Change to the next window.
# bind-key C-n renamew #S
bind-key -n S-Pageup copy-mode -u

##========================================##
##=================[ SPLIT KEYS ]
unbind %                ## Split the current pane into two, left and right.
bind H split-window -h
unbind '"'              ## Split the current pane into two, top and bottom.
bind V split-window -v

##========================================##
# windows moving
bind-key -r M-F1 swapw -t -1
bind-key -r M-F2 swapw -t +1

bind-key -r M-q swapw -t -1
bind-key -r M-w swapw -t +1

##========================================##
##                      [ NAVIGATION ]

## supa pupa windows selection
bind-key -n M-F1 previous-window
bind-key -n M-F2 next-window

## left hand switch
bind -n M-w next-window
bind -n M-q previous-window

# Shift arrow to switch windows
#bind -n S-Left  previous-window
#bind -n S-Right next-window


##========================================##
## reserve keys
bind-key -r C-Tab previous-window
bind-key -r Tab next-window


bind-key -r Left select-pane -L
bind-key -r Right select-pane -R

# bind-key F3 select-window -t :2
#bind-key -r Space next-layout


## ========================================================================== ##
## EXPERIMENTAL ##


## ========================================================================== ##
source ~/.tmux.status.conf

## ---- user defined overrides                                           ---- ##

if '[ -f ~/.tmux.conf.local ]' 'source ~/.tmux.conf.local'

