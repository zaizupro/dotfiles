##add in ~/.bashrc next lines:
##if [ -f ~/.bash_zaz ]; then
##    . ~/.bash_zaz
##fi

# ====colors for scripst============
# add some color
if [ -f $HOME/.bash_colors ]
then
  source $HOME/.bash_colors
fi
COLORSNUM=$(tput colors)
if [ "$COLORSNUM" -eq 256 ]; then
    #==========256 colors =======
    REDFG=$(tput setaf 160)
    REDBG=$(tput setab 160)

    DREDFG=$(tput setaf 52)
    DREDBG=$(tput setab 52)

    REDFGBG=$(tput setab 52;tput setaf 196)

    GREEN=$(tput setaf 112)
    GREENFGBG=$(tput setab 22;tput setaf 154)

    BLUE=$(tput setaf 38)

    YELLOW=$(tput setaf 220)
    YELLOWFGBG=$(tput setab 94;tput setaf 220)

    ORANGE=$(tput setaf 208)

    NC=$(tput sgr0)
    REV=$(tput rev)
else
    #==8 colors ================
    RED=$(tput setaf 1)
    GREEN=$(tput setaf 2)
    BLUE=$(tput setaf 6)
    YELLOW=$(tput setaf 3)
    ORANGE=$(tput setaf 3)
    NC=$(tput sgr0)
    REV=$(tput rev)
fi


#check colors
#for i in $(seq 0 $(tput colors) ) ; do tput setaf $i ; echo -n " [█${i}] " ; done ; tput setaf 15 ; echo




#===============VARIABLES============

#set colorful custom prompt
#2line prompt
#PS1='${REV}${GREEN}[$(__currentTTY)]${NC}${YELLOW} \u${RED}@${YELLOW}\H[${RED}\W${NC}]\$'
#PS1=${ORANGE}${PS1}${NC}
EDITOR=nano

# set PATH so it includes user's private bin if it exists
if [ -d ~/bin ] ; then
    PATH="~/_bin:${PATH}"
fi

ENV=$HOME/.bashrc

export PATH ENV EDITOR


# configure how history works
HISTCONTROL=ignoreboth
#HISTCONTROL=ignoredups                            # ignore the line if it matches previous line
HISTFILESIZE=20000                                # size of the history file cf. also shopt -s histappend
HISTSIZE=1000                                     # size of the run-time history list
HISTIGNORE=ls:ll:la:l:cd:pwd:exit:mc:su:df:clear  # do not put these in history file
#HISTFILE=~/.bash_history-`hostname`               # track history by host
# export settings
export HISTCONTROL HISTSIZE HISTFILESIZE HISTIGNORE #HISTFILE



#================CUSTOM_FUNCTIONS===================
# Source our bash.local, if present
if [ -f ~/.bashrc.local ]; then
  source ~/.bashrc.local
fi


__ddiff()
{
    svn diff |sed 's/^-/\x1b[30m\x1b[41m-/;s/^+/\x1b[30m\x1b[42m+/;s/^@/\x1b[30m\x1b[43m@/;s/$/\x1b[0m/'
}

__svn_st()
{
    OUT_MSG=""; [ "$(svn st 2> /dev/null | awk '{print $1}' |grep M |wc -l)" -ne "0" ] && OUT_MSG="[*]"
    echo $OUT_MSG
}

#⚡
__currentTTY()
{
#echo `tty | sed -e "s:/dev/::"`
temp=$(tty) ; echo ${temp:5}
}

__printor()
{
    TERMCOLS=$(tput cols)

    MSG=${1}
    COLOR=${2}
    MSGLNGTH=${#MSG}
    STARTLINE=$(printf "%-$((${TERMCOLS}/2 - ${MSGLNGTH}/2))s" "")
    STLNLNGTH=${#STARTLINE}
    ENDLINE=$(printf "%-$((${TERMCOLS} - (${STLNLNGTH} + ${MSGLNGTH})))s" "")

    echo $ORANGE"${STARTLINE// / }$COLOR${MSG}$NC$ORANGE${ENDLINE// / }"$NC
}

__blockprintor()
{
    BPMSG=${1}
    BPCOLOR=${2}
    BPDATE=`date -R`

    BPMSGLNGTH=${#BPMSG}
    BPDATELNGTH=${#BPDATE}

    BPMSGSPACEREXT=""
    BPDATESPACEREXT=""

    if [ $BPMSGLNGTH -ge $BPDATELNGTH ]; then
        BPHEADERLNGTH=${BPMSGLNGTH}

    else
        BPHEADERLNGTH=${BPDATELNGTH}
        if [  $(expr ${BPMSGLNGTH} % 2) -eq 0 ]; then
            BPMSGSPACEREXT=" "
        fi
    fi


        if [  $(expr ${BPHEADERLNGTH} % 2) -eq 0 ]; then
            BPDATESPACEREXT=" "
        fi

    BPHEADERLINE=`printf -v BPHEADERLINETMP "%-$((${BPHEADERLNGTH}))s" ' '; echo "${BPHEADERLINETMP// /─}"`
    BPDATESPACER=$(printf "%-$(( (${BPHEADERLNGTH}-${BPDATELNGTH})/2 ))s" "")
    BPMSGSPACER=$(printf "%-$(( (${BPHEADERLNGTH}-${BPMSGLNGTH})/2 ))s" "")

    __printor "┌─${BPHEADERLINE}─┐" ${BPCOLOR}
    __printor "│ ${BPMSGSPACER// / }${BPMSG}${BPMSGSPACER// / }${BPMSGSPACEREXT} │" ${BPCOLOR}
    __printor "│ ${BPDATESPACER// / }${BPDATE}${BPDATESPACER// / }${BPDATESPACEREXT} │" ${BPCOLOR}
    __printor "└─${BPHEADERLINE}─┘" ${BPCOLOR}
}

__printfulline()
{
    TERMCOLS=$(tput cols)
    FULLLINE=$(printf "%-${TERMCOLS}s" "*")
    __printor "${FULLLINE// /*}"
}


#====================ALIASES======================
#====moving==========#
alias s='cd ..'
alias cds='cd ~/_WORK'
alias cdn='cd `getNexusPath.sh`'

#====print info==========#
alias userls='cut -f1 -d: /etc/passwd'
alias homesize='du -hs ~'
alias topc='top -o%CPU'
alias topm='top -o%MEM'
alias rpmlist="rpm -qa --queryformat '%010{SIZE}\t%{NAME}-%{VERSION}-%{RELEASE}\n'"



#====print files==========#
alias ll='ls -lah --color=no'
alias lsh='ls -a | grep "^\."'
alias gitl='git log --format=oneline'


# Tell to df to don't see the supermount filesystems.
#alias df='df -x supermount'

#====dev==========#
alias remek='kek && mek'
alias tigs='tig status'

alias gitusers="git shortlog | grep -E '^[^ ]'"

alias ta='tmux attach -t'
alias tn='tmux new -s'
alias tls='tmux ls'
alias tk='tmux kill-session -t'


alias makepass='openssl rand -base64 12'
alias vm='startVM.sh'

# Stolen from github.com/zanshin
# Just for fun
#alias please='sudo !!'
alias please='sudo '
alias fail='tail -f'

# Enable aliases to be sudo’ed
alias sudo='sudo '

#====NET aliases=========================================
#global
#ifconfig eth0:0 inet 192.168.0.240 netmask 0xffff0000





