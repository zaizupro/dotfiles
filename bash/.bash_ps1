## PS1 PROMPT LINE

#set colorful custom prompt
#2line prompt
#PS1='${REV}${GREEN}[$(__currentTTY)]${NC}${YELLOW} \u${RED}@${YELLOW}\H[${RED}\W${NC}]\$'
#PS1="\[${NC}\]\[${ORANGE}\]${PS1}\[${NC}\]"


__getspace()
{
    for i in $(seq 1 $1) ; do echo -n ' ';
    done
}

__getprompt()
{
    PWD=$(basename $(pwd))
    echo "$(__getspace $(expr $(tput cols) - ${#PWD} - 1))${PWD}"
}

#PS1='\[${NC}\]\[${ORANGE}\]$(__getprompt)\r>\[${NC}\]'
#PS1='\[${NC}\]\[${ORANGE}\]>\[${NC}\]'
#PS1='\[${NC}\]\[$(tput setaf 214)\]>\[$(tput setaf 208)\]>\[$(tput setaf 202)\]>\[${NC}\]'


##[==========================================================================]##
##                                                                            ##
_get_f_part()
{
    if [ $(git st >/dev/null 2>&1; echo $?) -ne 0 ]; then
        OUT=">"
    else
        if [ "$(git branch | grep '*' | cut -d ' ' -f 2)" == "master" ]; then OUT="|" ; else OUT="/";fi
    fi
    echo ${OUT}
}

##[==================================]##
_get_s_part()
{
    if [ $(git st >/dev/null 2>&1; echo $?) -ne 0 ]; then
        OUT=">"
    else
        if [ $(git diff --quiet >/dev/null 2>&1; echo $?) -eq 0 ] ; then OUT=">" ; else  OUT="<" ; fi
    fi
    echo ${OUT}
}

#if ! git rev-parse --git-dir > /dev/null 2>&1; then
#    return 0
#fi

# î‚°
PS1='\[${NC}\]\[$(tput setaf 214)\]$(_get_f_part)\[$(tput setaf 208)\]$(_get_s_part)\[$(tput setaf 202)\]>\[${NC}\]'
##                                                                            ##
##[==========================================================================]##
